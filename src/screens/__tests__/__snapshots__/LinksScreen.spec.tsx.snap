// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsScreen renders the SettingsScreen screen 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#FFF",
        "flex": 1,
        "paddingBottom": 24,
      },
    ]
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="always"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "flex": 1,
        "width": "100%",
      }
    }
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <RNGestureHandlerButton
        activeOpacity={0.105}
        collapsable={false}
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "backgroundColor": "#fdfdfd",
                "borderBottomWidth": 0,
                "borderColor": "#ededed",
                "borderWidth": 0.5,
                "paddingHorizontal": 15,
                "paddingVertical": 15,
              },
              false,
            ],
          ]
        }
        underlayColor="black"
      >
        <View
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              Object {
                "marginRight": 12,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "rgba(0,0,0,0.35)",
                    "fontSize": 22,
                  },
                  undefined,
                  Object {
                    "fontFamily": "FontAwesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Logout
          </Text>
        </View>
      </RNGestureHandlerButton>
      <RNGestureHandlerButton
        activeOpacity={0.105}
        collapsable={false}
        onActiveStateChange={[Function]}
        onGestureEvent={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onHandlerStateChange={[Function]}
        onPress={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "backgroundColor": "#fdfdfd",
                "borderBottomWidth": 0,
                "borderColor": "#ededed",
                "borderWidth": 0.5,
                "paddingHorizontal": 15,
                "paddingVertical": 15,
              },
              false,
            ],
          ]
        }
        underlayColor="black"
      >
        <View
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              Object {
                "marginRight": 12,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "rgba(0,0,0,0.35)",
                    "fontSize": 22,
                  },
                  undefined,
                  Object {
                    "fontFamily": "FontAwesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Google
          </Text>
        </View>
      </RNGestureHandlerButton>
    </View>
  </RCTScrollView>
</View>
`;
